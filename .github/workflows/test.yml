name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  # Run pytest, integration tests, and linters
  test:
    runs-on: ${{ matrix.platform }}

    strategy:
      fail-fast: false
      matrix:
        # See https://help.github.com/articles/virtual-environments-for-github-actions
        platform:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', 'pypy-3.8']

    steps:
      - uses: actions/checkout@v3
        if: ${{ ! startsWith(matrix.python-version, 'pypy-') }}
      - uses: actions/checkout@v1
        if: ${{ startsWith(matrix.python-version, 'pypy-') }}
        # Using actions/checkout@v2 or later with pypy causes an error
        # (see https://foss.heptapod.net/pypy/pypy/-/issues/3640)
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade setuptools pip wheel
          python -m pip install tox
      - name: Test with tox
        run: tox -m ${{ matrix.python-version }}
        if: ${{ ! (matrix.platform == 'macos-latest' && matrix.python-version == 'pypy-3.8') }}
      - name: Test with tox (Windows, py3.8)
        # Skip integration tests on macOS for now (very slow)
        run: tox -e pypy3
        if: ${{ matrix.platform == 'macos-latest' && matrix.python-version == 'pypy-3.8' }}
      - name: Upload failed outputs (windows-latest)
        uses: actions/upload-artifact@v3
        with:
          name: leda-output-windows
          path: C:/Users/RUNNER~1/AppData/Local/Temp/leda_integration_test_*/**/*.html
          retention-days: 1
        if: ${{ failure() && matrix.platform == 'windows-latest' }}
      - name: Upload failed outputs (unix)
        uses: actions/upload-artifact@v3
        with:
          name: leda-output-unix
          path: /tmp/leda_integration_test_*/**/*.html
          retention-days: 1
        if: ${{ failure() && matrix.platform != 'windows-latest' }}

  # Test building and publishing
  # See:
  #  - https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
  #  - https://packaging.python.org/en/latest/tutorials/packaging-projects/
  #  - https://www.seanh.cc/2022/05/21/publishing-python-packages-from-github-actions/
  publish-test:
    runs-on: ubuntu-latest

    needs: [test]

    strategy:
      matrix:
        python-version: ['3.8']

    steps:
    - uses: actions/checkout@v3
      with:
        # See https://github.com/actions/checkout/issues/261
        ref: ${{ github.event.pull_request.head.sha }}
        # Grab entire history for setuptools_scm
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade build twine
    - name: Create packages
      run: python -m build
    - name: Run twine check
      run: twine check dist/*
