[metadata]
name = leda
summary = Generate static reports from Jupyter notebooks
long_description = file: README.md
long_description_content_type = text/markdown
license = Apache License 2.0
license_files = LICENSE
requires_python = >=3.7
keywords =
    reports, Jupyter, notebooks, data visualization
url = https://github.com/ansatzcapital/leda
project_urls =
    Packaging=https://pypi.org/project/leda/
    Source=https://github.com/ansatzcapital/leda
    Tracker=https://github.com/ansatzcapital/leda/issues
platforms = any
classifiers =
    Development Status :: 5 - Production/Stable
    Framework :: Jupyter
    Framework :: Matplotlib
    Intended Audience :: Developers
    Operating System :: OS Independent
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: Implementation :: CPython
    Programming Language :: Python :: Implementation :: PyPy
    Topic :: Software Development :: Libraries
    Topic :: Scientific/Engineering :: Visualization

[options]
packages = find:
python_requires = >=3.7
install_requires =
    # See also requirements-bundle*.txt.
    # requirements-bundle0 is used as a min constraint.
    cached-property == 1.5.2
    ipython >= 7.16.1
    ipywidgets >= 7.5.1
    markdown2 >= 2.3.9
    matplotlib >= 2.2.5
    nbconvert >= 5.6.1
    nbformat >= 5.0.4
    packaging >= 19.0.0
    plotly >= 4.6.0
    termcolor >= 1.1.0
    tqdm >= 4.48.2
setup_requires =
    setuptools_scm[toml] >= 4

[options.extras_require]
demos =
    numpy >= 1.16.0
    pandas >= 1.0.0
    panel >= 0.14.1
panel =
    panel >= 0.14.1
testing =
    beautifulsoup4 >= 4.11.1
    black >= 22.8
    build >= 0.6.0
    docformatter >= 1.5.0
    flake8 >= 5.0.4
    isort >= 5.2.2
    mypy >= 0.800
    pytest >= 6.2.5
    pytest-cov >=2, <3
    pyright >= 1.1.284
    tox >= 3.27.1
    types-beautifulsoup4 >= 4.11.1
    types-termcolor >= 1.1.0
    types-tqdm >= 4.48.2
    wheel >= 0.38.0

[options.package_data]
* =
    *.tpl
    *.json
    *.html.j2
leda = py.typed

[flake8]
ignore = E203,E501,W503
max-complexity = 10

[tox:tox]
min_version = 3.7
env_list =
    black
    docformatter
    flake8
    isort
    mypy
    pyright
    py37,py38,py39,py310,py311,pypy3
isolated_build = True
labels =
    test = py37,py38,py39,py310,py311,pypy3
    integration_test = integration_test_bundle0,integration_test_bundle1,integration_test_bundle2,integration_test_bundle3,integration_test_bundle4
    lint = black,docformatter,flake8,isort,mypy,pyright
    3.7 = py37,integration_test_bundle0
    3.8 = black,docformatter,flake8,isort,mypy,pyright,py38,integration_test_bundle1,integration_test_bundle2
    3.9 = py39
    3.10 = py310,integration_test_bundle3
    3.11 = py311,integration_test_bundle4
    pypy-3.8 = pypy3
; TODO: Investigate pypy issues with integration test
;    pypy-3.8 = pypy3,integration_test_bundle1,integration_test_bundle2

[testenv]
extras = testing
commands = pytest {posargs}
pass_env = LEDA_*

[testenv:integration_test_bundle0]
base_python = py37
deps =
    -r requirements-bundle0.txt
extras = demos, testing
; Need to constrain extras per requirements file
install_command = python -m pip install {opts} {packages} -c requirements-bundle0.txt
; In some cases, the cached versions of matplotlib and numpy are
; incompatible, so we force them to rebuild in this order.
commands_pre =
    pip install numpy==1.16.6 --force --no-cache -c requirements-bundle0.txt
    pip install matplotlib==2.2.5 --force --no-cache -c requirements-bundle0.txt
commands = python -m leda.tests.integration.run_test bundle0 --log INFO

[testenv:integration_test_bundle1]
base_python = py38
deps =
    -r requirements-bundle1.txt
extras = demos, testing
; Need to constrain extras per requirements file
install_command = python -m pip install {opts} {packages} -c requirements-bundle1.txt
; In some cases, the cached versions of matplotlib and numpy are
; incompatible, so we force them to rebuild in this order.
commands_pre =
    pip install numpy==1.16.6 --force --no-cache -c requirements-bundle1.txt
    pip install matplotlib==2.2.5 --force --no-cache -c requirements-bundle1.txt
commands = python -m leda.tests.integration.run_test bundle1 --log INFO

[testenv:integration_test_bundle2]
base_python = py38
deps =
    -r requirements-bundle2.txt
extras = demos, testing
; Need to constrain extras per requirements file
install_command = python -m pip install {opts} {packages} -c requirements-bundle2.txt
; In some cases, the cached versions of matplotlib and numpy are
; incompatible, so we force them to rebuild in this order.
commands_pre =
    pip install numpy==1.16.6 --force --no-cache -c requirements-bundle2.txt
    pip install matplotlib==3.1.3 --force --no-cache -c requirements-bundle2.txt
commands = python -m leda.tests.integration.run_test bundle2 --log INFO

[testenv:integration_test_bundle3]
base_python = py310
deps =
    -r requirements-bundle3.txt
extras = demos, testing
; Need to constrain extras per requirements file
install_command = python -m pip install {opts} {packages} -c requirements-bundle3.txt
; In some cases, the cached versions of matplotlib and numpy are
; incompatible, so we force them to rebuild in this order.
commands_pre =
    pip install numpy==1.22.4 --force --no-cache -c requirements-bundle3.txt
    pip install matplotlib==3.5.3 --force --no-cache -c requirements-bundle3.txt
commands = python -m leda.tests.integration.run_test bundle3 --log INFO

[testenv:integration_test_bundle4]
base_python = py311
deps =
    -r requirements-bundle4.txt
extras = demos, testing
; Need to constrain extras per requirements file
install_command = python -m pip install {opts} {packages} -c requirements-bundle4.txt
; In some cases, the cached versions of matplotlib and numpy are
; incompatible, so we force them to rebuild in this order.
commands_pre =
    pip install numpy==1.24.0 --force --no-cache -c requirements-bundle4.txt
    pip install matplotlib==3.6.2 --force --no-cache -c requirements-bundle4.txt
commands = python -m leda.tests.integration.run_test bundle4 --log INFO

[testenv:black]
extras = testing
commands = black --check leda

[testenv:docformatter]
extras = testing
commands = docformatter -cr leda

[testenv:flake8]
extras = testing
commands = flake8 leda

[testenv:isort]
extras = testing
commands = isort -c leda

[testenv:mypy]
extras = testing
commands = mypy leda

[testenv:pyright]
extras = testing
commands = pyright leda
allowlist_externals = pyright
